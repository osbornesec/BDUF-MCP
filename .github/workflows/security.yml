name: Security Scanning

on:
  push:
    branches: [ main, develop, 'feature/*', 'bugfix/*', 'hotfix/*' ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  secret-scanning:
    name: Secret Detection
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitLeaks secret detection
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: Scan for common secrets patterns
        run: |
          echo "🔍 Scanning for common secret patterns..."
          
          # Check for common secret patterns
          if grep -r -i "password\|secret\|key\|token" --include="*.md" --include="*.yml" --include="*.yaml" --include="*.json" . | grep -v ".git" | grep -v "password_hash\|passwordHash\|example\|placeholder\|TODO\|FIXME"; then
            echo "⚠️ Potential secrets found in documentation files"
            echo "Please review the above matches and ensure no real secrets are committed"
          else
            echo "✅ No obvious secrets detected in documentation"
          fi

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          config-file: ./.github/codeql/codeql-config.yml

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Security Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  file-integrity:
    name: File Integrity Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check file permissions
        run: |
          echo "🔍 Checking file permissions and integrity..."
          
          # Check for executable files that shouldn't be
          find . -type f -executable -name "*.md" -o -name "*.json" -o -name "*.yml" -o -name "*.yaml" | while read file; do
            echo "⚠️ Unexpected executable file: $file"
          done
          
          # Check for files with unusual names
          find . -name "*~" -o -name "*.tmp" -o -name "*.bak" | while read file; do
            echo "⚠️ Temporary/backup file found: $file"
          done
          
          echo "✅ File integrity check completed"

  malware-scan:
    name: Malware Detection
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ClamAV malware scan
        run: |
          echo "🦠 Installing ClamAV for malware detection..."
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon
          
          echo "📥 Updating virus definitions..."
          sudo freshclam || true
          
          echo "🔍 Scanning repository for malware..."
          clamscan -r --bell -i . || {
            echo "⚠️ ClamAV scan completed with warnings"
            exit 0
          }
          
          echo "✅ No malware detected"

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [secret-scanning, codeql-analysis, file-integrity, malware-scan]
    if: always()
    
    steps:
      - name: Generate security summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          
          # Secret scanning status
          if [[ "${{ needs.secret-scanning.result }}" == "success" ]]; then
            echo "| Secret Detection | ✅ No secrets found |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Secret Detection | ❌ Issues detected |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # CodeQL status
          if [[ "${{ needs.codeql-analysis.result }}" == "success" ]]; then
            echo "| Code Analysis | ✅ No vulnerabilities |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Code Analysis | ⚠️ Review required |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # File integrity status
          if [[ "${{ needs.file-integrity.result }}" == "success" ]]; then
            echo "| File Integrity | ✅ All files clean |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| File Integrity | ❌ Issues found |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Malware scan status
          if [[ "${{ needs.malware-scan.result }}" == "success" ]]; then
            echo "| Malware Scan | ✅ Repository clean |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Malware Scan | ⚠️ Scan issues |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🛡️ **Security scanning completed**" >> $GITHUB_STEP_SUMMARY