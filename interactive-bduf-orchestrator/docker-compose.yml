version: '3.8'

services:
  app:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://bduf_user:bduf_password@postgres:5432/bduf_orchestrator
      - REDIS_URL=redis://redis:6379
      - CONTEXT7_API_KEY=${CONTEXT7_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - JWT_SECRET=dev-jwt-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - bduf-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=bduf_orchestrator
      - POSTGRES_USER=bduf_user
      - POSTGRES_PASSWORD=bduf_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bduf_user -d bduf_orchestrator"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bduf-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bduf-network

  # Optional: Database management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@bduf.local
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - bduf-network
    profiles:
      - tools

  # Optional: Redis management UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - bduf-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  bduf-network:
    driver: bridge